// Code generated by go-swagger; DO NOT EDIT.

package evaluate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openmock/openmock/swagger_gen/models"
)

// EvaluateOKCode is the HTTP code returned for type EvaluateOK
const EvaluateOKCode int = 200

/*EvaluateOK when successfully evaluated

swagger:response evaluateOK
*/
type EvaluateOK struct {

	/*
	  In: Body
	*/
	Payload *models.MockEvalResponse `json:"body,omitempty"`
}

// NewEvaluateOK creates EvaluateOK with default headers values
func NewEvaluateOK() *EvaluateOK {

	return &EvaluateOK{}
}

// WithPayload adds the payload to the evaluate o k response
func (o *EvaluateOK) WithPayload(payload *models.MockEvalResponse) *EvaluateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the evaluate o k response
func (o *EvaluateOK) SetPayload(payload *models.MockEvalResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EvaluateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*EvaluateDefault server error

swagger:response evaluateDefault
*/
type EvaluateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewEvaluateDefault creates EvaluateDefault with default headers values
func NewEvaluateDefault(code int) *EvaluateDefault {
	if code <= 0 {
		code = 500
	}

	return &EvaluateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the evaluate default response
func (o *EvaluateDefault) WithStatusCode(code int) *EvaluateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the evaluate default response
func (o *EvaluateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the evaluate default response
func (o *EvaluateDefault) WithPayload(payload *models.Error) *EvaluateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the evaluate default response
func (o *EvaluateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EvaluateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
